generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id              Int        @id @default(autoincrement())
  name            String     @unique
  parentId        Int?
  parentCategory  Category?  @relation("ParentCategory", fields: [parentId], references: [id])
  childCategories Category[] @relation("ParentCategory")
  features        Feature[]
  banner          String
  articles Article[]
}

model User {
  id          Int    @id @default(autoincrement())
  firstName   String
  lastName    String
  password    String
  email       String @unique
  phoneNumber String @unique
  carts       Cart[]
  role Role
}

model Article {
  id              Int              @id @default(autoincrement())
  name            String
  model           String
  producer        Producer         @relation(fields: [producerId], references: [id])
  quantity Int
  cartItem        CartItem[]
  photos ArticlePhoto[]
  price Price[]
  producerId      Int
  categoryId Int
  isSelling Boolean @default(true)
  category Category @relation(fields: [categoryId],references: [id])
  articleFeatures ArticleFeature[]
}
model Order {
  id Int @id @default(autoincrement())
  orderStatus OrderStatus
  cartId Int 
  cart Cart @relation(fields: [cartId],references: [id])
}
model ArticlePhoto {
  id Int @id @default(autoincrement())
  articleId Int 
  article Article @relation(fields: [articleId],references: [id])
  url String
  type ArticlePhotoType
  @@unique([url,articleId])
}
enum ArticlePhotoType {
  MAIN
  SECONDARY
}
enum OrderStatus {
  PENDING
  ACCEPTED
  DELIVERED
  CANCELED
}
enum Role {
  ADMIN
  USER
}
model Producer {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  articles Article[]
}

model Price {
  id      Int      @id @default(autoincrement())
  articleId Int
  article Article @relation(fields: [articleId],references: [id])
  value   Float 
  addedAt DateTime @default(now())
}

model Feature {
  id              Int              @id @default(autoincrement())
  name            String
  categoryId      Int
  category        Category         @relation(fields: [categoryId], references: [id])
  articleFeatures ArticleFeature[]
  @@unique([categoryId,name])
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart Cart  @relation(fields: [cartId],references: [id])
  cartId Int
  quantity  Int
  articleId Int
  article   Article @relation(fields: [articleId], references: [id])
  @@unique([cartId,articleId])
}

model Cart {
  id     Int        @id @default(autoincrement())
  userId Int
  user   User       @relation(fields: [userId], references: [id])
  status CartStatus
  order Order[]
  cartItems CartItem[]
  @@unique([userId,status])
}

enum CartStatus {
  ONGOING
  PROCESSING
  ABORTED
}

model ArticleFeature {
  id        Int     @id @default(autoincrement())
  articleId Int
  featureId Int
  value     String
  article   Article @relation(fields: [articleId], references: [id])
  feature   Feature @relation(fields: [featureId], references: [id])
  @@unique([articleId,featureId])
}
